version: '3.8'

networks:
  ck-io:

volumes:
  production_traefik: {}
  jenkins-docker-certs:
  jenkins-data:

services:
  nexus:
    image: sonatype/nexus3:3.35.0
    container_name: 'nexus'
    restart: always
    volumes:
      - './volumes/nexus-data:/nexus-data'
    networks:
      - ck-io
  sonar:
    image: sonarqube:8.9.2-community
    container_name: sonar
    restart: always
    depends_on:
      - sonar-postgres
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonar-postgres:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - './volumes/sonar/conf:/opt/sonarqube/conf'
      - './volumes/sonar/data:/opt/sonarqube/data'
      - './volumes/sonar/logs:/opt/sonarqube/logs'
      - './volumes/sonar/extensions:/opt/sonarqube/extensions'
    networks:
      - ck-io
  sonar-postgres:
    image: postgres:9.6.21-alpine
    container_name: 'sonar-postgres'
    volumes:
      - './volumes/sonar/postgresql:/var/lib/postgresql'
      - './volumes/sonar/postgresql_data:/var/lib/postgresql/data'
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    networks:
      - ck-io
  jenkins:
    build:
      context: ./config/jenkins
      dockerfile: ./Dockerfile
    container_name: jenkins-blueocean1.1
    restart: always
    environment:
      - DOCKER_HOST=tcp://docker:2376
      - DOCKER_CERT_PATH=/certs/client
      - DOCKER_TLS_VERIFY=1
    ports:
      - 8080:8080
      - 50000:50000
    tty: true
    volumes:
      - jenkins-data:/var/jenkins_home
      - jenkins-docker-certs:/certs/client:ro
      - $HOME:/home
    depends_on:
      - dind
    networks:
      - ck-io

  dind:
    image: docker:dind
    privileged: true
    restart: always
    networks:
      ck-io:
        aliases:
          - docker
    ports:
      - 2376:2376
    tty: true
    volumes:
      - jenkins-data:/var/jenkins_home
      - jenkins-docker-certs:/certs/client
      - $HOME:/home
    environment:
      - DOCKER_TLS_CERTDIR=/certs

  traefik:
    build:
      context: .
      dockerfile: ./traefik.Dockerfile
    image: ckechad_production_traefik
    depends_on:
      - nexus
      - sonar
      - jenkins

    volumes:
      - './volumes/traefik/:/etc/traefik/acme:z'
      - './traefik/traefik.yml:/etc/traefik/traefik.yml'
    ports:
      - '0.0.0.0:80:80'
      - '0.0.0.0:443:443'
    networks:
      - ck-io
